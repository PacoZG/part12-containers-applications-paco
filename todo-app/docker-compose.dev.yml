services:
  frontend-dev:
    image: frontend-dev
    ports:
      - 3000:3000
    build:
      context: ./todo-frontend # The context will pick this directory as the "build context"
      dockerfile: ./dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.dev.yml"
    container_name: frontend-dev # This will name the container frontend-dev

  nginx:
    image: nginx:1.20.1
    ports:
      - 8080:80
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    container_name: reverse-proxy
    depends_on:
      - frontend-dev

  mongo-dev:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./mongo_data:/data/db

  redis-dev:
    image: redis
    ports:
      - 6379:6379
    command: ['redis-server', '--appendonly', 'yes'] # Overwrite the CMD
    volumes: # Declare the volume
      - ./redis_data:/data

  backend-dev:
    image: backend-dev
    ports:
      - 3001:3001
    build:
      context: ./todo-backend
      dockerfile: dev.Dockerfile
    volumes:
      - ./todo-backend:/usr/src/app
    environment:
      - REDIS_URL=//redis-dev:6379
      - MONGO_URL=mongodb://root:example@mongo-dev:27017/the_database
